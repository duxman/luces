/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.2 */

#ifndef PB_PROTOCOL_PROTO_PB_H_INCLUDED
#define PB_PROTOCOL_PROTO_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _display {
    pb_callback_t frame;
    bool has_Ini;
    bool Ini;
    bool has_Fin;
    bool Fin;
} display;

typedef struct _led {
    int32_t Pin;
    int32_t Color;
} led;


/* Initializer values for message structs */
#define led_init_default                         {0, 0}
#define display_init_default                     {{{NULL}, NULL}, false, false, false, false}
#define led_init_zero                            {0, 0}
#define display_init_zero                        {{{NULL}, NULL}, false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define display_frame_tag                        1
#define display_Ini_tag                          2
#define display_Fin_tag                          3
#define led_Pin_tag                              1
#define led_Color_tag                            2

/* Struct field encoding specification for nanopb */
#define led_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, INT32,    Pin,               1) \
X(a, STATIC,   REQUIRED, INT32,    Color,             2)
#define led_CALLBACK NULL
#define led_DEFAULT NULL

#define display_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  frame,             1) \
X(a, STATIC,   OPTIONAL, BOOL,     Ini,               2) \
X(a, STATIC,   OPTIONAL, BOOL,     Fin,               3)
#define display_CALLBACK pb_default_field_callback
#define display_DEFAULT (const pb_byte_t*)"\x10\x00\x18\x00\x00"
#define display_frame_MSGTYPE led

extern const pb_msgdesc_t led_msg;
extern const pb_msgdesc_t display_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define led_fields &led_msg
#define display_fields &display_msg

/* Maximum encoded size of messages (where known) */
#define led_size                                 22
/* display_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
