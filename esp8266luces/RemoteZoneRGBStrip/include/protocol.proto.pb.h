/*
 * Copyright (c) 2020-2037 duxman.
 *
 * This file is part of Duxman Luces 
 * (see https://github.com/duxman/luces).
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */
/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.2 */

#ifndef PB_PROTOCOL_PROTO_PB_H_INCLUDED
#define PB_PROTOCOL_PROTO_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _ledLevel {
    int32_t Level;
} ledLevel;


/* Initializer values for message structs */
#define ledLevel_init_default                    {0}
#define ledLevel_init_zero                       {0}

/* Field tags (for use in manual encoding/decoding) */
#define ledLevel_Level_tag                       1

/* Struct field encoding specification for nanopb */
#define ledLevel_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, INT32,    Level,             1)
#define ledLevel_CALLBACK NULL
#define ledLevel_DEFAULT NULL

extern const pb_msgdesc_t ledLevel_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define ledLevel_fields &ledLevel_msg

/* Maximum encoded size of messages (where known) */
#define ledLevel_size                            11

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
