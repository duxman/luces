#
# Copyright (c) 2020-2037 duxman.
#
# This file is part of Duxman Luces 
# (see https://github.com/duxman/luces).
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#
'''This file automatically rebuilds the proto definitions for Python.'''
from __future__ import absolute_import

import os.path
import sys

import pkg_resources

from ._utils import has_grpcio_protoc, invoke_protoc

dirname = os.path.dirname(__file__)
protosrc = os.path.join(dirname, "nanopb.proto")
protodst = os.path.join(dirname, "nanopb_pb2.py")

if os.path.isfile(protosrc):
    src_date = os.path.getmtime(protosrc)
    if not os.path.isfile(protodst) or os.path.getmtime(protodst) < src_date:

        cmd = [
            "protoc",
            "--python_out={}".format(dirname),
            protosrc,
            "-I={}".format(dirname),
        ]

        if has_grpcio_protoc():
            # grpcio-tools has an extra CLI argument
            # from grpc.tools.protoc __main__ invocation.
            _builtin_proto_include = pkg_resources.resource_filename('grpc_tools', '_proto')

            cmd.append("-I={}".format(_builtin_proto_include))
        try:
            invoke_protoc(argv=cmd)
        except:
            sys.stderr.write("Failed to build nanopb_pb2.py: " + ' '.join(cmd) + "\n")
            raise
